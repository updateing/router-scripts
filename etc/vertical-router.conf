Display dpf {
	Driver	 'DPF'
	Port	   'usb0'
	Font	   '6x8'
	Foreground 'ffffff'
	Background 'ffffff00'
	Basecolor  '000000'   #ffffff00
	Orientation 1	  # Orientation value from 0-3
	Backlight  backlight   # Backlight variable control
}

# NOTE: Text.update CAN NOT be 0! This will cause CPU to go at 100%

Widget Model {
	class  'Text'
	expression uname('nodename') . ' Wireless Router'
	width  42
	align  'C'
	update minute
	style 'bold'
}

Widget UpText {
	class 'Text'
	expression 'Running for ' . uptime('%dd %H:%M:%S')
	width 42
	align 'C'
	update tick
	Foreground 'ffffff'
	Background 'FFFFFF00'
}

Widget WANUpSpeed1 {
	class 'Image'
	file imgdir . 'tmpnumber'. rcharat(wan_up_speed, 0) . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeed2 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_up_speed > 10 ? rcharat(wan_up_speed, 1) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeed3 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_up_speed > 100 ? rcharat(wan_up_speed, 2) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeed4 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_up_speed > 1000 ? rcharat(wan_up_speed, 3) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeed5 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_up_speed > 10000 ? rcharat(wan_up_speed, 4) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeed6 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_up_speed > 100000 ? rcharat(wan_up_speed, 5) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed1 {
	class 'Image'
	file imgdir . 'tmpnumber'. rcharat(wan_down_speed, 0) . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed2 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_down_speed > 10 ? rcharat(wan_down_speed, 1) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed3 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_down_speed > 100 ? rcharat(wan_down_speed, 2) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed4 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_down_speed > 1000 ? rcharat(wan_down_speed, 3) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed5 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_down_speed > 10000 ? rcharat(wan_down_speed, 4) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANDownSpeed6 {
	class 'Image'
	file imgdir . 'tmpnumber'. (wan_down_speed > 100000 ? rcharat(wan_down_speed, 5) : '') . '.png'
	reload 1
	update tick
	inverted 0
	visible 1
}

Widget WANUpSpeedText {
	class 'Text'
	expression 'KB/S Up'
	align 'R'
	update minute
}

Widget WANDownSpeedText {
	class 'Text'
	expression 'KB/S Down'
	align 'R'
	update minute
}

Widget IPText {
	class 'Text'
	expression '@ ' . netinfo::ipaddr(wan_device) . netinfo::netmask_short(wan_device)
	width 20
	align 'L'
	update minute
	foreground 'dfffacff'
}

Widget ClientTableText {
	class 'Text'
	expression '15 Clients (ARP):'
	width 20
	align 'L'
	style 'bold'
	update minute
}

Widget ClientTableLine1 {
	class 'Text'
	expression file::readline(arp_clients_file, 1)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine2 {
	class 'Text'
	expression file::readline(arp_clients_file, 2)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine3 {
	class 'Text'
	expression file::readline(arp_clients_file, 3)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine4 {
	class 'Text'
	expression file::readline(arp_clients_file, 4)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine5 {
	class 'Text'
	expression file::readline(arp_clients_file, 5)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine6 {
	class 'Text'
	expression file::readline(arp_clients_file, 6)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine7 {
	class 'Text'
	expression file::readline(arp_clients_file, 7)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine8 {
	class 'Text'
	expression file::readline(arp_clients_file, 8)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine9 {
	class 'Text'
	expression file::readline(arp_clients_file, 9)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine10 {
	class 'Text'
	expression file::readline(arp_clients_file, 10)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine11 {
	class 'Text'
	expression file::readline(arp_clients_file, 11)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine12 {
	class 'Text'
	expression file::readline(arp_clients_file, 12)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine13 {
	class 'Text'
	expression file::readline(arp_clients_file, 13)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine14 {
	class 'Text'
	expression file::readline(arp_clients_file, 14)
	width 42
	align 'L'
	update second
}

Widget ClientTableLine15 {
	class 'Text'
	expression file::readline(arp_clients_file, 15)
	width 42
	align 'L'
	update second
}

Widget MentoHUSTStatusText {
	class 'Text'
	expression exec('/usr/bin/detect_minieap.sh noexec', tick)
	width 42
	align 'C'
	update second
}

Widget CPUTempDescText {
	class  'Text'
	expression 'CPU Temp:'
	width  9
	align  'L'
	update minute
	foreground 'FFFFFFFF'
}

Widget CPUTempText {
	class  'Text'
	expression exec('cat /sys/class/thermal/thermal_zone0/temp', tick) \ 1000
	postfix ' C'
	width  5
	align  'R'
	update tick
	foreground 'FFCC00FF'
}

Widget Wireless24TempDescText {
	class  'Text'
	expression '2.4G:'
	width  5
	align  'L'
	update minute
	foreground 'FFFFFFFF'
}

Widget Wireless24TempText {
	class  'Text'
	expression exec('cat /sys/class/thermal/thermal_zone1/temp', tick) \ 1000
	postfix ' C'
	width  5
	align  'R'
	update tick
	foreground 'FFCC00FF'
}

Widget Wireless5TempDescText {
	class  'Text'
	expression '5G:'
	width  3
	align  'L'
	update minute
	foreground 'FFFFFFFF'
}

Widget Wireless5TempText {
	class  'Text'
	expression exec('cat /sys/class/thermal/thermal_zone2/temp', tick) \ 1000
	postfix ' C'
	width  5
	align  'R'
	update tick
	foreground 'FFCC00FF'
}

Widget CPUText {
	class  'Text'
	expression proc_stat::cpu('busy', 500)
	prefix 'CPU'
	postfix '%'
	precision 2
	width  13
	align  'R'
	update tick
	style 'bold'
}

Widget CPUBar {
	class 'Bar'
	expression  proc_stat::cpu('busy',   500)
	length 13
	direction 'E'
	max 100
	min 0
	update tick
	foreground 'ff9000'
	background '666666'
}

Widget RAMText {
	class  'Text'
	expression ((meminfo('MemTotal') - meminfo('MemFree')) \ 1024) . '/' . (meminfo('MemTotal') \ 1024)
	prefix 'RAM'
	postfix 'MB'
	width  13
	align  'R'
	update tick
	Background 'FFFFFF00'
	style 'bold'
}

Widget RAMBar {
	class 'Bar'
	expression  meminfo('MemTotal') - meminfo('MemFree')
	max meminfo('MemTotal')
	length 13
	direction 'E'
	update tick
	foreground '33ccff'
	background '666666'
}

Widget WANUpSpeedCollectJob {
	class 'Timer'
	expression wan_up_speed = netdev::fast(wan_device, 'Tx_bytes', 500) \ 1024
	active 1
	update tick
}

Widget WANDownSpeedCollectJob {
	class 'Timer'
	expression wan_down_speed = netdev::fast(wan_device, 'Rx_bytes', 500) \ 1024
	active 1
	update tick
}

Widget OnlineClientCollectJob {
	class 'Timer'
	expression exec('/usr/bin/gather_arp.sh', second)
	active 1
	update second
}

Display 'DPF'

Layout mylayout {
	Row3.Col0 'Model'
	Row5.Col0 'UpText'
	Row11.Col11 'WANUpSpeedText'
	Row11.Col29 'WANDownSpeedText'
	Row13.Col13 'IPText'
	Row15.Col2 'ClientTableText'
	Row16.Col2 'ClientTableLine1'
	Row17.Col2 'ClientTableLine2'
	Row18.Col2 'ClientTableLine3'
	Row19.Col2 'ClientTableLine4'
	Row20.Col2 'ClientTableLine5'
	Row21.Col2 'ClientTableLine6'
	Row22.Col2 'ClientTableLine7'
	Row23.Col2 'ClientTableLine8'
	Row24.Col2 'ClientTableLine9'
	Row25.Col2 'ClientTableLine10'
	Row26.Col2 'ClientTableLine11'
	Row27.Col2 'ClientTableLine12'
	Row28.Col2 'ClientTableLine13'
	Row29.Col2 'ClientTableLine14'
	Row30.Col2 'ClientTableLine15'
	Row33.Col0 'MentoHUSTStatusText'
	Row35.Col5 'CPUTempDescText'
	Row35.Col14 'CPUTempText'
	Row35.Col20 'Wireless24TempDescText'
	Row35.Col25 'Wireless24TempText'
	Row35.Col31 'Wireless5TempDescText'
	Row35.Col34 'Wireless5TempText'
	Row37.Col5 'CPUText'
	Row38.Col5 'CPUBar'
	Row37.Col25 'RAMText'
	Row38.Col25 'RAMBar'


	Layer 1 {
		X56.Y10 'WANUpSpeed6'
		X56.Y28 'WANUpSpeed5'
		X56.Y46 'WANUpSpeed4'
		X56.Y64 'WANUpSpeed3'
		X56.Y82 'WANUpSpeed2'
		X56.Y100 'WANUpSpeed1'

		X56.Y118 'WANDownSpeed6'
		X56.Y136 'WANDownSpeed5'
		X56.Y154 'WANDownSpeed4'
		X56.Y172 'WANDownSpeed3'
		X56.Y190 'WANDownSpeed2'
		X56.Y208 'WANDownSpeed1'
	}

	Timer1 'WANUpSpeedCollectJob'
	Timer2 'WANDownSpeedCollectJob'
	Timer3 'OnlineClientCollectJob'
}

Layout 'mylayout'

Variables {
	backlight 2
	tick 500
	second 1000
	minute 60000
	wan_device 'eth0.2'
	imgdir   '/usr/share/lcd4linux/landscape-img/'
	arp_clients_file '/tmp/clients'
	wan_up_speed 0 # In KBytes
	wan_down_speed 0 # In KBytes
}
