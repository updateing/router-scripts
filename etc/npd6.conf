// npd6 config file

// The prefix portion that we will match on

prefix=2001:db8:1000:1000:abcd:1234:5678::/112


// Which interface are we monitoring and using?

interface = eth0.2



// Note that an unlimited number of prefix/interface
// pairs can be used. Also note that the prefix can be set to
// 0::/0 which in effect matches anything at all.

// Router Advertisement Logging
// Log and decode options in received Router Advertisements
// If 'on', key Router Advertisement prefix-related info will be logged at INFO level
// Will also show the src addr of the probable next-hop router to use
// If 'on', at DEBUG2 level will log a lot more obscure RA-related stuff too.

ralogging = off

// **CHECK THE MAN PAGES FOR MORE! **


//***************************************************
//*************** Black/Whitelisting ****************
// If 'none' (the default) any NS matching the prefix gets a reply.
// If 'black', then any NS *except* those entires given, will
//  be answered by a Neighbor Advertisement (if the prefix matches)
// If 'white', then *only* NS with a target of one of the
//  entries will be answered by a Neighbor Advertisement (if the
//  prefix matches)
//
// Most folks will want the default, at least to get things going.

listtype = none

// listtype = black
// listtype = white
//addrlist = 2a01:0123:4567:89aa:aaaa:bbbb:cccc:dddd
//addrlist = 2a01:123:4567:89aa:dead:beef:dead:beef
//.
//.
//. (add as many addrlist entires as desired)
// Format: must be a 128-bit address, but all formats
// accepted, e.g. 2a01::22, 2a01::0022, etc.

// Pattern matching is also supported, via use of
// exprlist = <expression to match>
// *Please* check the man page and/or web site for more details
// on this. It's very powerful but needs a little thought first! It's
// not just simple regexps.


// If we're using black or white lists, this controls whether to
// log matches or not (if we're using debug mode, then they get
// logged anyway)

listlogging = off


//**************************************************
// Options below this line are normally not changed!
// Do so at your own risk... No, really: do not change
// these unless you have a precise understanding of what
// they do. They can break things in interesting ways....
//

// (Default: 100) Collect target data up to this many targets.
// Data can be subsequently log-dumped via a USR2.
// 0 to disable data collection.
collectTargets = 100

// (Default: false) Set to 'false' to disable target link-layer option
// on replies to unicasted NS
linkOption = false

// (Default: true) If we rx NS for the local interface
// we ignore it and let the kernel reply itself

// ********************************************
// Changed to false to fight with dumb switches from RJ Networks.
// Do not use this when you have a normal switch.
// (Although the kernel still sends "Destination Unreachable" before
// npd6 could reply, the switch will happily accept npd6's NA. So lucky.)
// ********************************************
ignoreLocal = false

// (Default: true) Normally outbound NAs should have ROUTER
// flag set.
routerNA = true

// (Default: 255) Normally set to max of 255. If changed,
// NAs may be silently ignored! Best left as-is...
maxHops = 255

// (Default: 20) Set to 0 to disable this threshold completely.
// If more than this number of consecutive poll errors occur
// terminate the process. e.g. an interface goes away permanently.
// Advice: Don't change this one unless you really understand why...!!
pollErrorLimit = 20

// $HeadURL: https://npd6.googlecode.com/svn/trunk/etc/npd6.conf $
// $Id: npd6.conf 98 2012-07-16 07:37:02Z sgroarke $
